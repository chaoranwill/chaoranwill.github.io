---
layout:     post
title:      "About Array"
subtitle:   "collected from nowcoder and blogs"
date:       2018-03-19 19:55:00
author:     "Chaoran"
header-img: "img/post-bg-array.jpg"
noToc:      true
tags:
    - 前端开发
    - js
---

> “To be is to be perceived. ”

* 目录
{:toc #toc}

## 是否改变原数组的常用方法
#### 改变原数组的
* shift：将第一个元素删除并且返回删除元素，空即为undefined
* unshift：向数组开头添加元素，并返回新的长度
* pop：删除最后一个并返回删除的元素
* push：向数组末尾添加元素，并返回新的长度
* reverse：颠倒数组顺序
* sort：对数组排序
* splice:splice(start,length,item)删，增，替换数组元素，返回被删除数组，无删除则不返回

#### 不改变原数组的：
* concat：连接多个数组，返回新的数组
* join：将数组中所有元素以参数作为分隔符放入一个字符
* slice：slice(start,end)，返回选定元素
* map,filter,forEach,some,every等不改变原数组

#### 必知的数组方法
* `Array.forEach()`
    能够方便的遍历数组里的每个元素，可以在回调函数里对每个元素进行操作
    该方法**没有返回值**，不需要在回调函数里写return，这是无意义的
    ```js
    //forEach
    var animals = ['dog', 'cat', 'mouse'];
    animals.forEach(function(item){
        console.log(item);
    });
    ```

* `Array.map()`
    > 如果你想修改数组里的每个元素，然后将修改后的数组存入新的数组，那使用 .map() 方法最方便。

    .map() 方法能够遍历整个数组，然后 返回一个新数组，这个新数组里的元素是经过了指定的回调函数处理过的
    ```js
    //map
    var numbers = [2, 4, 6, 8];
    var doubleNums = numbers.map(function(element) {
        return element * 2;
    });

    console.log('doubleNums: ', doubleNums)  //[4, 8, 12, 16]
    ```

* `Array.filter()`
    .filter() 方法能够过滤掉数组中的某些元素，可以在回调函数里设定条件，不符合条件的元素都会排除在外
    ```js
    var scores = [3, 12, 5, 23, 19, 7];

    var topScores = scores.filter(function(item){
        if (item > 10){
            return true;
        } else {
            return false;
        }
    });

    console.log('topScores: ', topScores);   // [12, 23, 19]
    ```

* `Array.indexOf()`
    indexOf() 能够告诉你 某个元素在数组中的位置，它返回的是索引值，如果数组里有重复的元素，它会返回第一个元素的位置
    ```js
    var a = [2, 9, 9, 18];

    var i = a.indexOf(9);

    console.log('i: ', i);

    /*
    if (a.indexOf(7) === -1) {
    // 数组中没有这个元素
    }*/
    ```

* `Array.every()`
    > 如果你想知道数组中的所有元素都是否符合某种条件，使用 .every() 最方便

    .every() 方法的作用是用指定的回调函数去检查数组中的每个元素，如果对于每个元素，这个回调函数都返回true，则.every()返回true。否则，.every() 返回false

    ```js
    var ages = [23, 19, 32, 44];

    var olderThan18 = ages.every(function(element) {
        return element > 18;
    });

    console.log('olderThan18: ', olderThan18);   // olderThan18:  true
    ```

参考：
[每个JavaScript程序员都需要知道的5个数组方法](http://www.webhek.com/post/5-array-methods-all-javascript-beginners-should-know.html)
[是否改变原数组的常用方法归纳](http://blog.csdn.net/cristina_song/article/details/77917404)
